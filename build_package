#!/bin/sh

py_ver=3
use_hg=`hg root | wc -l`
if [ $use_hg -eq 0 ]; then
  use_ssh=0
  use_remote=`cat CVS/Root | grep -c "@"`
  cvspackage=`cat CVS/Repository`
  cvsroot=`cat CVS/Root`
fi

# we can force some behaviour
while true
do
  case "$1" in
  --ssh) use_ssh=1 ;;
  --local) use_remote=0 ;;
  --docbook-xsl) shift
    DOCBOOK_XSL="XSLDBK=\"$1\"" ;;
  *) break ;;
  esac
  shift
done

if [ $use_hg -eq 1 ]; then
  echo "use mercurial"
elif [ $use_ssh -eq 1 ]; then
  echo "use ssh mode"
  CVSROOT=:ext:marsgui@cvs.sourceforge.net:/cvsroot/dblatex
  export CVSROOT
  CVS_RSH=ssh
  export CVS_RSH
elif [ $use_remote -ne 0 ]; then
  CVSROOT=:pserver:anonymous@cvs.sourceforge.net:/cvsroot/dblatex
  export CVSROOT
else
  CVSROOT=$cvsroot
  export CVSROOT
fi

package=dblatex

if [ $# -lt 1 ]; then
  echo "$0 [--ssh] vX_Y_Z"
  exit 1
fi
tag=$1

# The actual release number is given from the tag:
#   vX_Y_Z -> X.Y.Z
#
version=`echo $tag|tr "_" "."|sed 's/^v//'`

release=$package$py_ver-$version

echo "building version $version"

tmpdir=`mktemp -d /tmp/dblatex.XXXX`
if ! [ -d "$tmpdir" ]; then
  echo "Cannot create temporary directory $tmpdir"
  exit 1
fi

tmpbuild=$tmpdir/$release

if [ $use_hg -eq 1 ]; then

hg archive -r $tag $tmpbuild; rc=$?
if [ $rc -ne 0 ]; then
  echo "hg archive failed"
  exit 1
fi

rm -f $tmpbuild/.hg*

else

cd $tmpdir; cvs -z3 -q export -r $tag -d $release $cvspackage; rc=$?
cd -

if [ $rc -ne 0 ]; then
  echo "CVS failed"
  exit 1
fi

fi

# Remove the devel only files
rm -f $tmpbuild/build_package
rm -f $tmpbuild/build_egg
rm -f $tmpbuild/xsl/common/.cvsignore
rm -f $tmpbuild/xsl/common/Makefile
rm -f $tmpbuild/xsl/mathml2/Makefile
rm -r $tmpbuild/tests/mathml/build
rm -f $tmpbuild/tests/mathml/excluded*
rm -rf $tmpbuild/tools/cvstools
rm -rf $tmpbuild/tools/hgtools

# Remove some python test files
find $tmpbuild -name "test*.py" | xargs rm

# Temporary manual cleanup
rm -rf $tmpbuild/xsl/latex-0.5.1
rm -rf $tmpbuild/latex/example
rm -f  $tmpbuild/latex/specs/*.specs

# Make the schemas
gmake -C $tmpbuild/etc/schema
rm -f $tmpbuild/etc/schema/Makefile

# Make the package version file
sed "s/devel/$version/" $tmpbuild/xsl/version.xsl > \
     $tmpbuild/xsl/version2.xsl
mv $tmpbuild/xsl/version2.xsl $tmpbuild/xsl/version.xsl

# Make the package doc
rm -f $tmpbuild/docs/*.pdf
gmake -C $tmpbuild/docs VERSION=$version $DOCBOOK_XSL
rc=$?

if [ $rc -ne 0 ]; then
  echo "Manual building failed"
  exit 1
fi

# Cleanup compiled files
find $tmpbuild/lib -name "*.pyc" | xargs rm -f

# Make the ball
tar cvf - -C $tmpdir $release | bzip2 > $release.tar.bz2
rm -rf $tmpdir

