#
# Core building rules and dependencies to produce DVI/PostScript/PDF output
#
XSLT = xsltproc
XOPT = 
XSL = ../xsl/latex_book.xsl
XSLLST = ../xsl/common/mklistings.xsl
TEXRUN = ../../latex/scripts/runlatex
TEXDRV = dvips
XPATH = 
FIG2DEV = 

HERE = $(shell pwd)

vpath %.xml $(SRCDIR)

ifeq ($(TEXDRV),dvips)

%.pdf: %.ps FORCE
	ps2pdf -sPAPERSIZE=a4 $<

%.ps: %.dvi FORCE
	dvips -o $@ $<

%.dvi: %.tex FORCE
	@echo "Compiling $< ..."
	@$(TEXRUN) $< "$(SRCDIR) $(XPATH)"

else
ifeq ($(TEXDRV),pdftex)

%.ps: FORCE
	@echo "$(TEXDRV): Invalid Driver"

%.dvi: FORCE
	@echo "$(TEXDRV): Invalid Driver"

%.pdf: %.tex FORCE
	@echo "Compiling $< ..."
	@$(TEXRUN) $< "$(SRCDIR) $(XPATH)"

endif
endif

%.tex: %.rtex FORCE
	@$(TEXCLEAN) -b $(TEXDRV) -p $(SRCDIR) -f "$(FIG2DEV)" $< $@

%.rtex: %.lxml $(XMLFILE) FORCE
ifeq ($(XSLT),xt)
	java com.jclark.xsl.sax.Driver $< $(XSL) > $@
else
ifeq ($(XSLT),xsltproc)
	xsltproc --xinclude --catalogs --param listings.xml "'$(HERE)/$<'" \
                 $(XOPT) $(XSL) $(XMLFILE) > $@
endif
endif

%.lxml: $(XMLFILE)
ifeq ($(XSLLST),)
	@echo "No external file support"
	echo "<listings/>" > $@
else
	xsltproc --param current.dir "'$(SRCDIR)'" \
                 $(XSLLST) $< > $@
endif

FORCE:
